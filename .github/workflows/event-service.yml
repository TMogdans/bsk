name: event-service CI

on:
  push:
    paths:
      - 'services/event-service/api/**'
      - 'services/event-service/deployment/**'
    branches:
      - main
  pull_request:
    paths:
      - 'services/event-service/api/**'
      - 'services/event-service/deployment/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build node service and test it
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      WORKING-DIRECTORY: ./services/event-service/api

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        working-directory: ${{env.WORKING-DIRECTORY}}

      - name: Format check
        run: pnpm run format
        working-directory: ${{env.WORKING-DIRECTORY}}

      - name: Lint check
        run: pnpm run lint
        working-directory: ${{env.WORKING-DIRECTORY}}

      - name: Build App
        run: pnpm run build
        working-directory: ${{env.WORKING-DIRECTORY}}

      - name: Test App
        run: pnpm run test
        working-directory: ${{env.WORKING-DIRECTORY}}

  build_and_push:
    name: Build Docker image and push to ghcr
    needs: build_and_test
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: event-service

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/event-service/deployment/production/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/tmogdans/bsk/${{ env.IMAGE_NAME }}:latest