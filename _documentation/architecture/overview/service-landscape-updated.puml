@startuml "Brettspiel Platform Service Landscape"
!include <C4/C4_Container>

AddElementTag("gateway", $bgColor="#FF9800", $fontColor="#ffffff")

Person(user, "User", "Platform user")

System_Boundary(platform, "Brettspiel Platform") {
    Container(frontend, "Frontend Application", "React/Vue/etc", "User Interface")
    
    Container(apiGateway, "KrakenD API Gateway", "Go/KrakenD CE", "Zentrales API-Gateway f√ºr alle Backend-Services", $tags="gateway")
    
    Container(libraryService, "Library Service", "Node.js/TypeORM", "Stores boardgame information")
    Container(ratingService, "Rating Services", "Node.js", "Handles user ratings")
    Container(eventService, "Event Service", "Node.js", "Manages events & conventions")
    
    ContainerDb(libraryDb, "Library Database", "PostgreSQL", "Stores boardgame data")
    ContainerQueue(messageBus, "Message Bus", "NATS", "Event communication")
}

Rel(user, frontend, "Uses")
Rel(frontend, apiGateway, "Makes API calls", "REST")

Rel(apiGateway, libraryService, "Routes requests", "REST API")
Rel(apiGateway, ratingService, "Routes requests", "REST API")
Rel(apiGateway, eventService, "Routes requests", "REST API")

Rel(libraryService, libraryDb, "Reads/Writes")
Rel(libraryService, messageBus, "Subscribes to events")

Rel(ratingService, messageBus, "Publishes 'game-rated' events")
Rel(ratingService, messageBus, "Subscribes to 'boardgame-provided' events")

Rel(eventService, messageBus, "Publishes 'event-created' events")
Rel(eventService, messageBus, "Subscribes to 'boardgame-provided' events")

SHOW_LEGEND()
@enduml