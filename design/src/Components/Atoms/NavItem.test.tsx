// Generated by CodiumAI
import React from 'react';
import {render, screen} from "@testing-library/react";
import {NavItem} from "./NavItem";

describe('NavItem', () => {

    // Receives a NavItemType object as a prop and display its name property
    it('should receive a NavItemType object as a prop and display its name property', () => {
      // Given
      const item = { name: 'Test Item', target: '' };

      // When
      render(<NavItem item={item} />);
      const liElement = screen.getByText('Test Item');

      // Then
      expect(liElement).toBeInTheDocument();
    });

    // item prop has a target property that is a valid URL
    it('should render a li element with a valid URL as the href attribute', () => {
      // Given
      const item = { name: 'Test Item', target: 'https://www.example.com' };

      // When
      render(<NavItem item={item} />);
      const aElement = screen.getByText('Test Item');

      // Then
      expect(aElement).toHaveAttribute('href', 'https://www.example.com');
    });

    // item prop has a target property that is not a valid URL
    it('should render a li element with a fallback URL when the target property is not a valid URL', () => {
      // Given
      const item = { name: 'Test Item', target: 'invalid-url' };

      // When
      render(<NavItem item={item} />);
      const liElement = screen.getByText('Test Item');
      const anchorElement = screen.getByRole('link');

      // Then
      expect(liElement).toBeInTheDocument();
      expect(anchorElement).toHaveAttribute('href', 'fallback-url');
    });

});
