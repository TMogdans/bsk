version: "3.7"
services:
  bsk-db:
    image: mysql:5.7.22
    container_name: bsk-db
    restart: unless-stopped
    tty: true
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: ${EVENT_DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${EVENT_DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    command: --init-file /data/application/init.sql
    volumes:
      - ./mysql/init.sql:/data/application/init.sql
      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - bsk-network

  event-service:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: ./event-service
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: event-service
    environment:
      SERVICE_NAME: event-service
      SERVICE_TAGS: dev
      APP_KEY: ${EVENT_APP_KEY}
      APP_ENV: ${EVENT_APP_ENV}
      APP_DEBUG: ${EVENT_APP_DEBUG}
      DB_CONNECTION: ${EVENT_DB_CONNECTION}
      DB_HOST: ${EVENT_DB_HOST}
      DB_PORT: ${EVENT_DB_PORT}
      DB_DATABASE: ${EVENT_DB_DATABASE}
      DB_USERNAME: ${EVENT_DB_USERNAME}
      DB_PASSWORD: ""
      PHP_IDE_CONFIG: "serverName=localhost.local"
    volumes:
      - ./event-service/api:/var/www/html/event-service
      - ./event-service/docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./event-service/docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    working_dir: /var/www/html/event-service
    networks:
      - bsk-network
    depends_on:
      - bsk-db

  rating-service:
    build:
      context: ./rating-service
      dockerfile: deployment/development/Dockerfile
    container_name: rating-service
    restart: unless-stopped
    environment:
      SERVICE_NAME: rating-service
      SERVICE_TAGS: dev
      DB_CONNECTION: ${EVENT_DB_CONNECTION}
      DB_HOST: ${EVENT_DB_HOST}
      DB_PORT: ${EVENT_DB_PORT}
      DB_DATABASE: ${RATING_DB_DATABASE}
      DB_USERNAME: ${EVENT_DB_USERNAME}
      DB_PASSWORD: ""
    ports:
      - "3000:3000"
    volumes:
      - ./rating-service/api:/app
    networks:
      - bsk-network

  bsk_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bsk_frontend
    restart: unless-stopped
    environment:
      SERVICE_NAME: bsk_frontend
      SERVICE_TAGS: dev
    ports:
      - "3001:3000"
      - "6006:6006"
    volumes:
      - ./frontend:/frontend
    networks:
      - bsk-network

  event-nginx:
    image: nginx:stable-alpine
    container_name: event-nginx
    volumes:
      - ./event-service/api:/var/www/html/event-service
      - ./event-service/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"
    networks:
      - bsk-network
    depends_on:
      - event-service

  krakend_ce:
    image: devopsfaith/krakend
    volumes:
      - ./krakend:/etc/krakend
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    command: [ "run", "-d", "-c", "/etc/krakend/config.json" ]
    networks:
      - bsk-network
    depends_on:
      - event-service
      - event-nginx

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config:/etc/grafana
    ports:
      - "3333:3000"
    depends_on:
      - prometheus

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: ${KEYCLOAK_VENDOR}
      DB_ADDR: ${KEYCLOAK_HOST}
      DB_DATABASE: ${KEYCLOAK_DATABASE}
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    ports:
      - 8088:8080
    depends_on:
      - bsk-db

  nats:
    image: nats
    command: "-c /etc/nats/nats.conf --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    volumes:
      - ./nats/config/:/etc/nats
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    networks:
      - bsk-network

networks:
  bsk-network:
    driver: bridge

volumes:
  dbdata:
  dbdata2:
